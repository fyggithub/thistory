/**
  ******************************************************************************
  *                           硬石YS-F1Pro开发板例程功能说明
  *
  *  例程名称: YSF1_HAL-002. GPIO-流水灯
  *   
  ******************************************************************************
  * 说明：
  * 本例程配套硬石stm32开发板YS-F1Pro使用。
  * 
  * 淘宝：
  * 论坛：http://www.ing10bbs.com
  * 版权归硬石嵌入式开发团队所有，请勿商用。
  ******************************************************************************
  */

【1】例程简介
  使用stm32 HAL库函数实现LED流水灯效果。通过这个例程熟悉stm32 HAL库函数编程思想。

  stm32拥有非常多的IO引脚，这些IO引脚可以用作最简单的控制电平控制，可以设置为输出高电
平(数字量:1，对应3.3V)或者低电平(数字量:0,对应0V)，也可以设置为输入模式，读取这个IO引
脚的电平(比如用于按键状态读取)。  本例程我们调用HAL库函数方法来实现对IO引脚的输出高低
电平进行控制。
   
  通过开发板原理图我们可以知道：
   
  LED1灯负极接在GND(0V)上，正极通过一个电阻接在stm32f103zet6芯片的PB0引脚上（中间还
有一个JP3默认使用跳线帽短路），如果我们控制PB0引脚为高电平(3.3V)的话，此时电路存在电压
差，电流从LED1灯正极流向负极再经电阻流入GND，此时LED1灯是亮的；另外，如果我们控制PB0
引脚为低电平(0V)的话，此时电路没有电流，所以LED1灯是灭的。如此看来，只要我们控制PB0引
脚的高或者低电平就可以自由控制LED1灯的亮灭。 
  
  LED2和LED3控制原理与LED1是相同的。
  
  在使用IO引脚之前我们需要对IO引脚相关资源进行初始化配置，首先我们需要调用使能GPIOB
端口时钟函数LED1_RCC_CLK_ENABLE函数(实际是__HAL_RCC_GPIOB_CLK_ENABLE函数)。开启时钟
之后，我们就先通过HAL_GPIO_WritePin(LED1_GPIO, LED1_GPIO_PIN, GPIO_PIN_SET)函数设置
PB0初始化为高电平。然后设置可以来配置IO引脚的功能，这里我们需要把PB0引脚配置为推挽
输出模式，调用HAL_GPIO_Init(LED1_GPIO, &GPIO_InitStruct)函数实现初始化配置。
  在初始化PB0之后，就可以使用HAL_GPIO_WritePin函数非常方便控制输出的高电平或者低电平。
    
  
【2】跳线帽情况
******* 为保证例程正常运行，必须插入以下跳线帽 **********
丝印编号     IO端口      目标功能引脚        出厂默认设置
  JP3        PB0           LED1               已接入
  JP4        PG6           LED2               已接入
  JP5        PG7           LED3               已接入
  
【3】操作及现象
  使用开发板配套的MINI USB线连接到开发板标示“调试串口”字样的MIMI USB接口为开发板供电。
下载完程序之后，可以观察到开发板上三颗LED以不同形式先后亮灭。

/******************* (C) COPYRIGHT 2015-2020 硬石嵌入式开发团队 *****END OF FILE****/
